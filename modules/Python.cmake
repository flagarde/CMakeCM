include_guard(GLOBAL)

include(CPM)
cpm()

if(USE_SYSTEM_PYTHON3)
  find_package(Python3 REQUIRED)
  if(NOT Python3_FOUND)
    set(DOWNLOAD_PYTHON TRUE)
  else()
    set(DOWNLOAD_PYTHON FALSE)
  endif()
else()
  set(DOWNLOAD_PYTHON TRUE)
endif()

if(DOWNLOAD_PYTHON)
  unset(Python3_FOUND )
  unset(Python3_Interpreter_FOUND )
  unset(Python3_EXECUTABLE )
  unset(Python3_INTERPRETER_ID )
  unset(Python3_STDLIB )
  unset(Python3_STDARCH )
  unset(Python3_SITELIB )
  unset(Python3_SITEARCH )
  unset(Python3_SOABI )
  unset(Python3_Compiler_FOUND )
  unset(Python3_COMPILER )
  unset(Python3_COMPILER_ID )
  unset(Python3_DOTNET_LAUNCHER )
  unset(Python3_Development_FOUND )
  unset(Python3_Development.Module_FOUND )
  unset(Python3_Development.Embed_FOUND )
  unset(Python3_INCLUDE_DIRS )
  unset(Python3_LINK_OPTIONS )
  unset(Python3_LIBRARIES )
  unset(Python3_LIBRARY_DIRS )
  unset(Python3_RUNTIME_LIBRARY_DIRS )
  unset(Python3_VERSION )
  unset(Python3_VERSION_MAJOR )
  unset(Python3_VERSION_MINOR )
  unset(Python3_VERSION_PATCH )
  unset(Python3_PyPy_VERSION )
  unset(Python3_NumPy_FOUND )
  unset(Python3_NumPy_INCLUDE_DIRS )
  unset(Python3_NumPy_VERSION )

  if(NOT DEFINED PYTHON3_VERSION)
    set(PYTHON3_VERSION "3.9.7")
  endif()

  if(NOT DEFINED PYTHON3_REPOSITORY)
    set(PYTHON3_REPOSITORY "https://github.com/flagarde/python-portable/releases/download")
  endif()

  if(WIN32)
    set(PYTHON3_ARCHIVE_URL "${PYTHON3_REPOSITORY}/v${PYTHON3_VERSION}/cpython-${PYTHON3_VERSION}-windows-x86_64.zip" )
  elseif(APPLE)
    set(PYTHON3_ARCHIVE_URL "${PYTHON3_REPOSITORY}/v${PYTHON3_VERSION}/cpython-${PYTHON3_VERSION}-darwin-x86_64.tar.gz" )
  else()
    set(PYTHON3_ARCHIVE_URL "${PYTHON3_REPOSITORY}/v${PYTHON3_VERSION}/cpython-${PYTHON3_VERSION}-linux-x86_64.tar.gz" )
  endif()

  if(WIN32)
    set(PYTHON3_MD5 "67e19ff32b3ef62a40bccd50e33b0f53" )
  elseif(APPLE)
    set(PYTHON3_MD5 "5e7b1211a397e7f58137804d88f4f694" )
  else()
    set(PYTHON3_MD5 "15abcf635baa28f9003f6690496c6d09" )
  endif()

  CPMAddPackage(NAME Python
                VERSION ${PYTHON3_VERSION}
                URL ${PYTHON3_ARCHIVE_URL}
                URL_HASH   MD5=${PYTHON3_MD5})
               
  if(Python_ADDED)
    set(Python3_ROOT_DIR "${Python_SOURCE_DIR}")
    find_package(Python3 REQUIRED)
  endif()
endif()
