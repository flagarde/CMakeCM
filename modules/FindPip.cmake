include_guard(GLOBAL)

include(Python)

include(FindPackageHandleStandardArgs)
if(NOT "$ENV{VIRTUAL_ENV}" STREQUAL "")
  find_program(pip NAMES pip pip3 PATHS "$ENV{VIRTUAL_ENV}/bin" "$ENV{VIRTUAL_ENV}/Scripts" DOC "Path to pip executable." NO_DEFAULT_PATH)
else()
  find_program(pip NAMES pip pip3 DOC "Path to pip executable.")
endif()
if(NOT pip STREQUAL "pip-NOTFOUND")
  execute_process(COMMAND "${pip}" -V OUTPUT_VARIABLE pip_VERSION)
  string(REGEX MATCH "([0-9]+).([0-9]+).([0-9+])" pip_VERSION "${pip_VERSION}")
  add_library(pip_internal INTERFACE IMPORTED GLOBAL)
  set_target_properties(pip_internal PROPERTIES IMPORTED_LOCATION "${pip}")
  add_library(pip::pip ALIAS pip_internal)
endif()
find_package_handle_standard_args(Pip REQUIRED_VARS pip VERSION_VAR pip_VERSION HANDLE_VERSION_RANGE)

function(install_with_pip)
  cmake_parse_arguments(PIP "" "NAME" "OPTIONS" ${ARGN})
  #workaround problem with windows pip
  if(Python3_DOWNLOADED AND WIN32)
    set(PIP_COMMAND "${Python3_EXECUTABLE} -m pip")
  else()
    set(PIP_COMMAND "${pip}")
  endif()
  if(NOT DEFINED PIP_NAME)
    message(FATAL_ERROR "Option NAME is required !")
  endif()
  if(NOT DEFINED PIP_OPTIONS)
    execute_process(COMMAND "${PIP_COMMAND}" "install" "${PIP_NAME}" COMMAND_ECHO STDOUT)
  else()
    string(REPLACE ";" " " PIP_OPTIONS "${PIP_OPTIONS}")
    execute_process(COMMAND "${PIP_COMMAND}" "install" "${PIP_NAME}" "${PIP_OPTIONS}"  COMMAND_ECHO STDOUT)
  endif()
endfunction()
