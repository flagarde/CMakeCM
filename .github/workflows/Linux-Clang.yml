name: 'Linux Clang'

env:
  CMAKE_BUILD_TYPE: 'Release'
  CMAKE_BUILD_PREFIX: './build'
  CMAKE_SOURCE_PREFIX: '.'
  BUILD_TESTS: YES
  BUILD_DOCS: NO
  BUILD_EXAMPLES: NO

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cmake-version: ['3.16','3.17','3.18','3.19','3.20','3.21']
        compiler: ['clang10','clang11']
        include:
          - { compiler: 'clang10', icon: 'ðŸŸ¨', cc: clang-10, cxx: clang++-10, name: 'Clang 10' }
          - { compiler: 'clang11', icon: 'ðŸŸ¦', cc: clang-11, cxx: clang++-11, name: 'Clang 11' }
    name: '${{ matrix.icon }}ðŸ§ª Test CMake ${{ matrix.cmake-version }} ${{ matrix.name }}'

    steps:
    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v2.3.5
      with:
        fetch-depth: 0

    - name: '${{ matrix.icon }} Setup CMake'
      uses: jwlawson/actions-setup-cmake@v1.11
      with:
        cmake-version: '${{ matrix.cmake-version }}.x'
        github-api-token: ${{ secrets.GITHUB_TOKEN }}

    - name: 'ðŸ”§ Configure'
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      run: cmake -S ${{ env.CMAKE_SOURCE_PREFIX }} -B ${{ env.CMAKE_BUILD_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -D BUILD_TESTS=${{ env.BUILD_TESTS }} -D BUILD_DOCS=${{ env.BUILD_DOCS }} -D BUILD_EXAMPLES=${{ env.BUILD_EXAMPLES }}

    - name: 'ðŸ§ª Run tests'
      working-directory: ${{ env.CMAKE_BUILD_PREFIX }}
      run: ctest -C ${{ env.CMAKE_BUILD_TYPE }} -VV --output-on-failure
